{# Table widget #}
{% block ns_catalog_table_widget %}
{% spaceless %}
    {% set uid = 'ns-catalog-table-' ~ name %}
    <div class="{{ uid }}">
        {# Hidden input element #}
        <input class="ns-input" name="{{ form.vars.full_name }}" value="{{ value }}" type="hidden" />

        {# Main elements table #}
        <table class="ns-table table table-striped table-hover table-bordered">
            <thead>
            <tr>
                {% for element in rowsElements %}
                    <th>{{ element.title }}</th>
                {% endfor %}
                <th style="width:10px">&nbsp;</th>
            </tr>
            </thead>
            <tbody>
                <tr class="last">
                    <td colspan="99"><a href="#" class="btn add">Добавить элемент</a></td>
                </tr>
            </tbody>
        </table>

        {# Hidden JS templates #}
        <div class="templates" style="display: none">
            {# ROW #}
            <table>
            <tr class="ns-row">
                {% for element in rowsElements %}
                    <td>
                        <input class="ns-{{ element.name }}" value=""/>
                    </td>
                {% endfor %}
                <td><a class="btn btn-mini delete"><i class="icon-trash"></i></a></td>
            </tr>
            </table>
        </div>
    </div>

    <script type="text/javascript">
        (function($){
            var container = $('.{{ uid }}');
            var tbl = container.find('.ns-table');

            {# Adds new element #}
            var fnAddElement = function(value){
                value = value || {};
                var tplRow = container.find('.templates .ns-row');
                var row = tplRow.clone();
                {% for element in rowsElements %}
                    row.find('.ns-{{ element.name }}').val(value.{{ element.name }}||'').change(fnSetValue);
                {% endfor %}
                row.find('.delete').click(function(){
                    $(this).parents('tr:eq(0)').remove();
                    fnSetValue();
                    return false;
                });
                tbl.find('tbody tr:last-child').before(row);
                fnSetValue();
            };

            {# Sets hidden input value #}
            var fnSetValue = function(){
                var arr = [];
                tbl.find('.ns-row').each(function(){
                    arr.push({
                        {% for element in rowsElements %}
                            '{{ element.name }}': $(this).find('.ns-{{ element.name }}').val(){% if not loop.last %},{% endif %}
                        {% endfor %}
                    });
                });
                container.find('.ns-input').val(JSON.stringify(arr));
            };

            {# Sortables #}
            tbl.find('tbody').sortable({
                'items': '.ns-row',
                'helper': function(e, ui) {
                    ui.children().each(function() {
                        $(this).width($(this).width());
                    });
                    return ui;
                },
                'axis': 'y',
                'stop': fnSetValue
            });

            {# Element add button click handler #}
            container.find('.add').click(function(){
                fnAddElement();
                return false;
            });

            {# Loading values #}
            var elements = $.parseJSON(container.find('.ns-input').val());
            $.each(elements, function(){
                fnAddElement(this);
            });
        })(jQuery);
    </script>

{% endspaceless %}
{% endblock %}
