{# Type elements widget #}
{% block ns_catalog_type_elements_widget %}
{% spaceless %}
    {{ form_label(form) }}

    {% set uid = 'ns-catalog-type-elements-' ~ name %}
    <div class="{{ uid }}">

        {# Hidden input element #}
        <input class="ns-input" name="{{ form.vars.full_name }}" value="{{ value }}" type="hidden" />

        {# Main elements table #}
        <table class="ns-table table table-striped table-hover table-bordered">
            <thead>
            <tr>
                <th style="width:200px">Название</th>
                <th style="width:200px">Имя (лат.)</th>
                <th style="">Категория</th>
                <th style="width:10px">&nbsp;</th>
            </tr>
            </thead>
            <tbody>
                <tr class="last">
                    <td colspan="99"><a href="#" class="btn add"><i class="icon-plus"></i> Добавить элемент</a></td>
                </tr>
            </tbody>
        </table>

        {# Hidden JS templates #}
        <div class="templates" style="display: none">
            {# ROW #}
            <table>
            <tr class="ns-row">
                <td>
                    <input class="ns-title" value=""/>
                    <input class="ns-id" value="" type="hidden"/>
                </td>
                <td>
                    <input class="ns-name" value=""/>
                </td>
                <td>
                    <select class="ns-category">
                        <option value="text">Текстовое поле</option>
                        <option value="email">Адрес электронной почты</option>
                        <option value="textarea">Многострочный текст</option>
                        <option value="ckeditor">Текст HTML</option>
                        <option value="ns_catalog_node_date">Дата</option>
                        <option value="ns_file_select">Файл</option>
                        <option value="ns_catalog_node_image">Изображение</option>
                        <option value="ns_catalog_node_gallery">Фотогалерея</option>
                        <option value="checkbox">Флаг</option>
                        <option value="ns_catalog_node_select">Элемент каталога</option>
                    </select>
                </td>
                <td>
                    <div class="btn-group">
                        <input class="ns-options" value="" type="hidden">
                        <a class="ns-options-dialog-trigger btn btn-mini"><i class="icon-cog"></i></a>
                        <a class="btn btn-mini delete"><i class="icon-trash"></i></a>
                    </div>
                </td>
            </tr>
            </table>
        </div>

        {# Element options dialog #}
        <div class="ns-options-dialog modal hide fade" tabindex="-1" role="dialog" aria-labelledby="" aria-hidden="true">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h3>Настройки поля</h3>
            </div>
            <div class="modal-body">
            </div>
            <div class="modal-footer">
                <button class="btn" data-dismiss="modal" aria-hidden="true">Отмена</button>
                <button class="ns-save btn btn-primary">Сохранить</button>
            </div>
        </div>
    </div>

    <script type="text/javascript">
        (function($){
            var container = $('.{{ uid }}');
            var tbl = container.find('.ns-table');

            {# Adds new element #}
            var fnAddElement = function(id, title, category, name, options){
                var tplRow = container.find('.templates .ns-row');
                var row = tplRow.clone();
                row.find('.ns-id').val(id || null).change(fnSetValue);
                row.find('.ns-title').val(title || 'Новый элемент').change(fnSetValue);
                row.find('.ns-name').val(name || 'newName').change(fnSetValue);
                row.find('.ns-category').val(category || 'text').change(fnSetValue);
                row.find('.ns-options').val(JSON.stringify(options || {})).change(fnSetValue);
                row.find('.delete').click(function(){
                    $(this).parents('tr:eq(0)').remove();
                    fnSetValue();
                    return false;
                });
                tbl.find('tbody tr:last-child').before(row);
                fnSetValue();
            };

            {# Sets hidden input value #}
            var fnSetValue = function(){
                var arr = [];
                tbl.find('.ns-row').each(function(){
                    arr.push({
                        'id': $(this).find('.ns-id').val(),
                        'category': $(this).find('.ns-category').val(),
                        'title': $(this).find('.ns-title').val(),
                        'name': $(this).find('.ns-name').val(),
                        'options': JSON.parse($(this).find('.ns-options').val())
                    });
                });
                container.find('.ns-input').val(JSON.stringify(arr));
            };

            {# Sortables #}
            tbl.find('tbody').sortable({
                'items': '.ns-row',
                'helper': function(e, ui) {
                    ui.children().each(function() {
                        $(this).width($(this).width());
                    });
                    return ui;
                },
                'axis': 'y',
                'stop': fnSetValue
            });

            {# Element add button click handler #}
            container.find('.add').click(function(){
                fnAddElement();
                return false;
            });

            {# Loading values #}
            var elements = $.parseJSON(container.find('.ns-input').val());
            $.each(elements, function(){
                fnAddElement(this.id, this.title, this.category, this.name, this.options);
            });

            {# Options dialog #}
            container.find('.ns-options-dialog-trigger').click(function(){
                $('#ns-loader').animate({opacity: 1});
                var dlg = container.find('.ns-options-dialog');
                var typeElementCategory = $(this).parents('.ns-row').find('.ns-category').val();

                var input = $(this).parents('.ns-row').find('.ns-options');
                dlg.data('input', input);

                $.ajax('{{ url('ns_catalog_node_type_element_options_dialog') }}', {
                    type: 'GET',
                    data: {
                        typeElementCategory: typeElementCategory,
                        values: input.val()
                    },
                    success: function(res){
                        if (res.error) {
                            throw res.error;
                        }
                        $('#ns-loader').animate({opacity: 0});
                        dlg.find('.modal-body').html(res);
                        var options = JSON.parse(input.val());
                        container.find('.modal-body :input').each(function(){
                            var el = $(this);
                            $.each(options, function(key, value){
                                if (el.attr('name').indexOf('[' + key + ']') > 0) {
                                    el.val(value);
                                }
                            });
                        });
                        dlg.modal('show');
                    }
                });
                return false;
            });
            container.find('.ns-options-dialog .ns-save').click(function(){
                var dlg = container.find('.ns-options-dialog');
                var options = {};
                $.each(container.find('.modal-body :input').serializeArray(), function(i, obj){
                    var key = obj.name.match(/.+\[([^\]]+)\]/i)[1];
                    if (key != '_token') {
                        options[key] = obj.value;
                    }
                });
                dlg.data('input').val(JSON.stringify(options));
                dlg.modal('hide');
                fnSetValue();
                return false;
            });
        })(jQuery);
    </script>
{% endspaceless %}
{% endblock %}
